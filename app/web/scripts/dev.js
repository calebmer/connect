/* eslint-disable no-console */

// Do this as the first thing so that any code reading it knows the right env.
global.__DEV__ = true;
global.__TEST__ = false;
process.env.BABEL_ENV = "development";
process.env.NODE_ENV = "development";

// Makes the script crash on unhandled rejections instead of silently
// ignoring them. In the future, promise rejections that are not handled will
// terminate the Node.js process with a non-zero exit code.
process.on("unhandledRejection", err => {
  throw err;
});

const webpack = require("webpack");
const WebpackDevServer = require("webpack-dev-server");
const openBrowser = require("react-dev-utils/openBrowser");
const webpackConfig = require("../webpack.config");
const webpackDevServerConfig = require("../webpackDevServer.config");

// Create a webpack compiler.
const compiler = webpack(webpackConfig);

// Serve webpack assets generated by the compiler over a web server.
const devServer = new WebpackDevServer(compiler, webpackDevServerConfig);

// Launch WebpackDevServer.
devServer.listen(3000, "0.0.0.0", error => {
  if (error) {
    console.log(error);
  } else {
    openBrowser("http://localhost:3000");
  }
});

["SIGINT", "SIGTERM"].forEach(sig => {
  process.on(sig, () => {
    devServer.close();
    process.exit();
  });
});
