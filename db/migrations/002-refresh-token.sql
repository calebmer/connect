-- A refresh token allows an account to stay logged in on a device forever.
-- They do this by allowing an API client to keep asking for new access tokens
-- which are shorter lived. Refresh tokens may be revoked for security
-- considerations whereas short lived access tokens may not be revoked.
--
-- See the [Auth0 blog][1] for more information about refresh tokens.
--
-- [1]: https://auth0.com/learn/refresh-tokens
CREATE TABLE refresh_token (
  -- We use a UUID to identify our refresh tokens. The UUID is generated by
  -- our application server instead of our database.
  token UUID PRIMARY KEY,
  -- The account that this refresh token is tied to. When refreshing an access
  -- token we will use this account ID for the new access token.
  account_id CHAR(22) NOT NULL REFERENCES account(id),
  -- The last time this refresh token was used to generate a new access token.
  -- Used for keeping track of how refresh tokens are used.
  last_used_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
  -- The time at which a UUID was created. We should also consider adding extra
  -- information like the device this refresh token is attached to so that a
  -- person may sign out of their account on all their devices.
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- Refresh tokens are secured at an API level considering we provide very little
-- access to them. We provide access to `connect_api_auth` and
-- not `connect_api` very intentionally!
GRANT SELECT ON TABLE refresh_token TO connect_api_auth;
GRANT INSERT ON TABLE refresh_token TO connect_api_auth;
GRANT UPDATE ON TABLE refresh_token TO connect_api_auth;
GRANT DELETE ON TABLE refresh_token TO connect_api_auth;
